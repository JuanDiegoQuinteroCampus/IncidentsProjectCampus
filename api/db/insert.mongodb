use("db_incidentsCampus");
db.incidents.insertMany([
  {
    _id: 1,
    name: "Incidente 1",
    description: "Descripci칩n del incidente 1",
    date: ISODate("2023-09-20"),
    report_user: 101,
    severity: "Alta",
    zone: "Zona A",
    place: "Lugar A",
    priority: "Urgente",
    solution_date: ISODate("2023-09-21"),
    id_soporte: 201,
    created_date: ISODate("2023-09-20"),
    update_date: ISODate("2023-09-20"),
    delete_date: null,
  },
  {
    _id: 2,
    name: "Incidente 2",
    description: "Descripci칩n del incidente 2",
    date: ISODate("2023-09-21"),
    report_user: 102,
    severity: "Media",
    zone: "Zona B",
    place: "Lugar B",
    priority: "Normal",
    solution_date: null,
    id_soporte: null,
    created_date: ISODate("2023-09-21"),
    update_date: null,
    delete_date: null,
  },
]);

use("db_incidentsCampus");
db.support.insertMany([
  {
    _id: 201,
    name: "Soporte 1",
    personal: "Personal A",
    date: ISODate("2023-09-20"),
    estado: "Activo",
    id_incident: 1,
    created_date: ISODate("2023-09-20"),
    update_date: ISODate("2023-09-20"),
    delete_date: null,
    support_person: "Pepito"
  },
  {
    _id: 202,
    name: "Soporte 2",
    personal: "Personal B",
    date: ISODate("2023-09-21"),
    estado: "Inactivo",
    id_incident: 2,
    created_date: ISODate("2023-09-21"),
    update_date: null,
    delete_date: null,
    support_person: "Juancho"
  }
]);


use("db_incidentsCampus");
  db.users.insertMany([
    {
        "_id": 1,
        "username": "Admin",
        "password": "contrase침a1",
        "token": [],
        "id_rol": 1
      },
      {
        "_id": 2,
        "username": "User",
        "password": "contrase침a2",
        "token": [],
        "id_rol": 2
      }
  ])

  use("db_incidentsCampus");
  db.incidents.find({priority: "Urgente"})

  use("db_incidentsCampus");
db.incidents.find({date:ISODate("2023-09-21")})

use("db_incidentsCampus");
db.incidents.aggregate([
  {
    $match: {
      _id: 1, 
    },
  },
  {
    $lookup: {
      from: "support",
      localField: "_id",
      foreignField: "id_incident",
      as: "support_info",
    },
  },
  {
    $unwind: "$support_info",
  },
  {
    $project: {
      _id: 1,
      name: 1,
      date: 1,
      support_person: "$support_info.support_person",
      solution_date: "$support_info.date",
    },
  },
]);


use("db_incidentsCampus");
db.support.find({estado: {$regex:/^activo$/i}})


use("db_incidentsCampus");
db.discord.find({}, {projection:{username:1, global_name:1, email:1}})